type Task {
  id: ID!

  # Give your tasks a simple, concise title
  title: String!

  # Describe your project in detail with as many words as you need
  description: String!

  # You can split your Taks into several activities that help you
  # to structure, plan and implement your Project
  activities: [Activity!]!
}

enum ActivityState {
  CREATED,
  STARTED,
  FINISHED,
}

# An Task is part of a Project. It represents an actual
# task (or sub-project) of a Tasks that needs to be fulfilled
# to complete the Project
type Activity {
  id: ID!

  # A concicse title of this task, that describes what to do
  title: String!
  state: ActivityState!

  # Your task always belongs to exactly one project
  project: Task!
}

type Query {
  # This returns a list of all of your tasks
  tasks: [Task!]!
}
